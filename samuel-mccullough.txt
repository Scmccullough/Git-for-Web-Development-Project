https://codepen.io/samuel-mccullough/pen/dypgJLa?editors=1100
1. What is Semantic HTML? 
The correct use of HTML to reinforce the moeaning of content on a web page.
    2. What is HTML used for?
 Allows the user to create and structure web pages and applications.     
    3. What is an attribute and where do we put it?
 Attributes define additional properties of an element such as width and height of an image.    
    4. What is the h1 tag used for? How many times should I use it on a page?
 The h1 tag is the "Title" of the web page and should only be used once.   
    5. Name two tags that have required attributes
    class="value"     href="value"
    6. What do we put in the head of our HTML document? 
 The title, so the h1 tag.
    7. What is an id?
 The id attribute specifies a unique id for an HTML element.    
    8. What elements can I add an id to?
 You can id to any element.    
    9. How many times can I use the same id on a page? 
 Once  
    10. What is a class?
 Attribute used to specify a name for an element to point to in CSS.   
    11. What elements can I add a class to? 
 You can add a class to any element.   
    12. How many times can I use the same class on a page?
  As many times as you want.   
    13. How do I get my link to open in a new tab?
  <a href="yourLinkhere" target="_blank">
    14. What is the alt attribute in the image tag used for?
 Provides a text to speech alternative for those who may not be able to see an image.    
    15. How do I reference an id?
 use a "#" and the id you chose in CSS. 
    16. What is the difference between a section and a div
 Divs and sections are basically the same thing.
    17. What is CSS used for?
 To add style to your web page.    
    18. How to we select an element? Example - every h2 on the page
 h2{} in CSS   
    19. What is the difference between a class and an id? - Give me an example of when I might use each one
 An id is more specific, and holds more "authority".   
    20. How do we select classes in CSS?
 .classname {}
    21. How do we select a p element with a single class of “human””?
 p.human {}   
    22. What is a parent child selector? When would this be useful?
  Selects a specific element within an element. Example, selecting all <p> where the "parent" is a <div>  
    23. How do you select all links within a div with the class of sidebar?
    div > sidebar
    24. What is a pseudo selector?
 Its a keyword added to a selector that names a special state like :hover.  
    25. What do we use the change the spacing between lines?
 line-height:
    26. What do we use to change the spacing between letters?
 letter-spacing:   
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?
 text-transform:   
    28. How do I add a 1px border around my div that is dotted and black?
 border: 10px dotted red;   
    29. How do I select everything on the page?
 use *    
    30. How do I write a comment in CSS?
 <!--   
    31. How do I find out what file I am in, when I am using the command line?
 the pwd command   
    32. Using the command line - how do I see a list of files/folders in my current folder?
 the ls command   
    33. How do I remove a file via the command line? Why do I have to be careful with this?
 rm filename    
    34. Why should I use version control?
 so multiple creators can work on a single project    
    35. How often should I commit to github?
  very often  
    36. What is the command we would use to push our repo up to github? 
  git push -u firstname-lastname  
    37. Walk me through Lambda's git flow.
 1.Fork
 2.copy the link
 3.clone the forked repo to the directory you want to use using git clone command
 4.cd into the newly created repo using cd <repo-name>
 5.use get checkout -b firstname-lastname to create your own branch
 6.make changes
 7.use git add to get your changes ready to commit.
 8. use git commit -m "your message" to commit and explain what youve added.
 9. use git push -u origin firstname-lastname to push your commits from your local computer to github
 10.Submit pull request to YOUR forked copy (not the lambda original)
    